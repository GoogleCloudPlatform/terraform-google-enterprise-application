/**
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// TODO: use custom service account after PR is merged:  https://github.com/GoogleCloudPlatform/cluster-toolkit/pull/3736
data "google_compute_default_service_account" "default" {
  # tflint-ignore: all
  project = var.infra_project
}
// TODO: Define exactly where permissions below on fleet scope and fleet project should be assigned - maybe this should be a PR from the team to the 2-multitenant repo, so a platform engineer can approve the role grant
resource "google_project_iam_member" "compute_sa_roles" {
  for_each = toset([
    "roles/gkehub.connect",
    "roles/gkehub.viewer",
    "roles/gkehub.gatewayReader",
    "roles/gkehub.scopeEditorProjectLevel"
  ])
  role    = each.key
  project = var.cluster_project
  member  = data.google_compute_default_service_account.default.member
}

# TODO: Define exactly where to apply rbacrolebindings
module "fleet_app_operator_permissions" {
  source  = "terraform-google-modules/kubernetes-engine/google//modules/fleet-app-operator-permissions"
  version = "~> 36.0"

  fleet_project_id = var.cluster_project
  scope_id         = local.namespace
  users            = [data.google_compute_default_service_account.default.email]
  role             = "ADMIN"
}
