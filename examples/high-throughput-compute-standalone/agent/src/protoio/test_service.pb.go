// Copyright 2024 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.3
// 	protoc        v3.21.12
// source: test_service.proto

package protoio

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TestInput struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Unique identifier (possibly a timestamp!)
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// Likelihood of failure (for a simulator)
	PercCrash float64 `protobuf:"fixed64,2,opt,name=perc_crash,json=percCrash,proto3" json:"perc_crash,omitempty"`
	PercFail  float64 `protobuf:"fixed64,3,opt,name=perc_fail,json=percFail,proto3" json:"perc_fail,omitempty"`
	// How long it takes to run (for a simulator)
	MaxMicros int64 `protobuf:"varint,4,opt,name=max_micros,json=maxMicros,proto3" json:"max_micros,omitempty"`
	MinMicros int64 `protobuf:"varint,5,opt,name=min_micros,json=minMicros,proto3" json:"min_micros,omitempty"`
	// Size of payload results (all risk metrics, sensitivities, etc)
	ResultSize int64 `protobuf:"varint,6,opt,name=result_size,json=resultSize,proto3" json:"result_size,omitempty"`
	// Payload includes all marketdata, trade information,
	// risk metric parameters, etc..
	Payload       []byte `protobuf:"bytes,7,opt,name=payload,proto3" json:"payload,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TestInput) Reset() {
	*x = TestInput{}
	mi := &file_test_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TestInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestInput) ProtoMessage() {}

func (x *TestInput) ProtoReflect() protoreflect.Message {
	mi := &file_test_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestInput.ProtoReflect.Descriptor instead.
func (*TestInput) Descriptor() ([]byte, []int) {
	return file_test_service_proto_rawDescGZIP(), []int{0}
}

func (x *TestInput) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *TestInput) GetPercCrash() float64 {
	if x != nil {
		return x.PercCrash
	}
	return 0
}

func (x *TestInput) GetPercFail() float64 {
	if x != nil {
		return x.PercFail
	}
	return 0
}

func (x *TestInput) GetMaxMicros() int64 {
	if x != nil {
		return x.MaxMicros
	}
	return 0
}

func (x *TestInput) GetMinMicros() int64 {
	if x != nil {
		return x.MinMicros
	}
	return 0
}

func (x *TestInput) GetResultSize() int64 {
	if x != nil {
		return x.ResultSize
	}
	return 0
}

func (x *TestInput) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

type TestOutput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Payload       []byte                 `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TestOutput) Reset() {
	*x = TestOutput{}
	mi := &file_test_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TestOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestOutput) ProtoMessage() {}

func (x *TestOutput) ProtoReflect() protoreflect.Message {
	mi := &file_test_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestOutput.ProtoReflect.Descriptor instead.
func (*TestOutput) Descriptor() ([]byte, []int) {
	return file_test_service_proto_rawDescGZIP(), []int{1}
}

func (x *TestOutput) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *TestOutput) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

var File_test_service_proto protoreflect.FileDescriptor

var file_test_service_proto_rawDesc = []byte{
	0x0a, 0x12, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x6d, 0x61, 0x69, 0x6e, 0x22, 0xd0, 0x01, 0x0a, 0x09, 0x54,
	0x65, 0x73, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x65, 0x72, 0x63,
	0x5f, 0x63, 0x72, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x70, 0x65,
	0x72, 0x63, 0x43, 0x72, 0x61, 0x73, 0x68, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x65, 0x72, 0x63, 0x5f,
	0x66, 0x61, 0x69, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x70, 0x65, 0x72, 0x63,
	0x46, 0x61, 0x69, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x61, 0x78, 0x5f, 0x6d, 0x69, 0x63, 0x72,
	0x6f, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6d, 0x61, 0x78, 0x4d, 0x69, 0x63,
	0x72, 0x6f, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x69, 0x6e, 0x5f, 0x6d, 0x69, 0x63, 0x72, 0x6f,
	0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6d, 0x69, 0x6e, 0x4d, 0x69, 0x63, 0x72,
	0x6f, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x5f, 0x73, 0x69, 0x7a,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x53,
	0x69, 0x7a, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0x36, 0x0a,
	0x0a, 0x54, 0x65, 0x73, 0x74, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x70,
	0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x70, 0x61,
	0x79, 0x6c, 0x6f, 0x61, 0x64, 0x32, 0x3d, 0x0a, 0x0b, 0x54, 0x65, 0x73, 0x74, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x2e, 0x0a, 0x07, 0x52, 0x75, 0x6e, 0x54, 0x65, 0x73, 0x74, 0x12,
	0x0f, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x54, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74,
	0x1a, 0x10, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x54, 0x65, 0x73, 0x74, 0x4f, 0x75, 0x74, 0x70,
	0x75, 0x74, 0x22, 0x00, 0x42, 0x5b, 0x5a, 0x59, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x50, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2f, 0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x2d, 0x72,
	0x65, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2d, 0x72, 0x69, 0x73, 0x6b, 0x2d, 0x65, 0x78, 0x61,
	0x6d, 0x70, 0x6c, 0x65, 0x73, 0x2f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x2f, 0x72,
	0x69, 0x73, 0x6b, 0x2f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x69,
	0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_test_service_proto_rawDescOnce sync.Once
	file_test_service_proto_rawDescData = file_test_service_proto_rawDesc
)

func file_test_service_proto_rawDescGZIP() []byte {
	file_test_service_proto_rawDescOnce.Do(func() {
		file_test_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_test_service_proto_rawDescData)
	})
	return file_test_service_proto_rawDescData
}

var file_test_service_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_test_service_proto_goTypes = []any{
	(*TestInput)(nil),  // 0: main.TestInput
	(*TestOutput)(nil), // 1: main.TestOutput
}
var file_test_service_proto_depIdxs = []int32{
	0, // 0: main.TestService.RunTest:input_type -> main.TestInput
	1, // 1: main.TestService.RunTest:output_type -> main.TestOutput
	1, // [1:2] is the sub-list for method output_type
	0, // [0:1] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_test_service_proto_init() }
func file_test_service_proto_init() {
	if File_test_service_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_test_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_test_service_proto_goTypes,
		DependencyIndexes: file_test_service_proto_depIdxs,
		MessageInfos:      file_test_service_proto_msgTypes,
	}.Build()
	File_test_service_proto = out.File
	file_test_service_proto_rawDesc = nil
	file_test_service_proto_goTypes = nil
	file_test_service_proto_depIdxs = nil
}
