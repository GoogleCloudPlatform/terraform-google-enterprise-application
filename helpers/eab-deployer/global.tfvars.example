/**
 * Copyright 2023 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// General inputs

// The directory where the helper will git clone the Google Source Repositories that will
// host the code for each one of the stages
code_checkout_path = "FULL_PATH_TO_FOLDER_WHERE_TO_CHECK_OUT_THE_SOURCE_REPOSITORIES"

// The directory where the user has created a fresh git clone of the Enterprise Application Blueprint repository
eab_code_path = "FULL_PATH_TO_FOLDER_WHERE_THE_EAB_CODE_WAS_CHECKED_OUT"

bucket_force_destroy  = true
buckets_force_destroy = true
deletion_protection   = false

infra_cloudbuildv2_repository_config = {
  repo_type = "GITHUBv2"
  repositories = {
    multitenant = {
      repository_name = "eab-multitenant"
      repository_url  = "https://github.com/USER/eab-multitenant.git"
    },
    applicationfactory = {
      repository_name = "eab-appfactory"
      repository_url  = "https://github.com/USER/eab-appfactory.git"
    },
    fleetscope = {
      repository_name = "eab-fleetscope"
      repository_url  = "https://github.com/USER/eab-fleetscope.git"
    },
    hello-world = {
      repository_name = "hello-world-admin"
      repository_url  = "https://github.com/USER/hello-world-admin.git"
    }
  }
  # The Secret ID format is: projects/PROJECT_NUMBER/secrets/SECRET_NAME
  gitlab_authorizer_credential_secret_id      = null
  gitlab_read_authorizer_credential_secret_id = null
  gitlab_webhook_secret_id                    = null
  # If you are using a self-hosted instance, you may change the URL below accordingly
  gitlab_enterprise_host_uri = null
  # Format is projects/PROJECT/locations/LOCATION/namespaces/NAMESPACE/services/SERVICE
  gitlab_enterprise_service_directory = null
  # .pem string
  gitlab_enterprise_ca_certificate = null
  secret_project_id                = "SECRET_PROJECT_ID"

  github_app_id_secret_id = "projects/SECRET_PROJECT_NUMER/secrets/github-app-id"
  github_secret_id        = "projects/SECRET_PROJECT_NUMER/secrets/github-pat"
}

app_services_cloudbuildv2_repository_config = {
  repo_type = "GITHUBv2"
  repositories = {
    eab-default-example-hello-world = {
      repository_name = "hello-world-i-r"
      repository_url  = "https://github.com/USER/hello-world-i-r.git"
    }
  }
  # The Secret ID format is: projects/PROJECT_NUMBER/secrets/SECRET_NAME
  gitlab_authorizer_credential_secret_id      = null
  gitlab_read_authorizer_credential_secret_id = null
  gitlab_webhook_secret_id                    = null
  # If you are using a self-hosted instance, you may change the URL below accordingly
  gitlab_enterprise_host_uri = null
  # Format is projects/PROJECT/locations/LOCATION/namespaces/NAMESPACE/services/SERVICE
  gitlab_enterprise_service_directory = null
  # .pem string
  gitlab_enterprise_ca_certificate = null
  secret_project_id                = "SECRET_PROJECT_ID"

  github_app_id_secret_id = "projects/SECRET_PROJECT_NUMER/secrets/github-app-id"
  github_secret_id        = "projects/SECRET_PROJECT_NUMER/secrets/github-pat"
}


// An existing project configured as the default project in the local Cloud SDK configuration
// See https://cloud.google.com/sdk/gcloud/reference/config/set#EXAMPLES


// 1-bootstrap inputs
// https://github.com/GoogleCloudPlatform/terraform-google-enterprise-application/tree/main/1-bootstrap#inputs

common_folder_id = "folders/COMMON_FOLDER_NUMBER"
project_id       = "SEED_PROJECT_ID"
workerpool_id    = "projects/WORKERPOOL_PROJECT_ID/locations/REGION/workerPools/CB_PRIVATE_WORKERPOOL_NAME"
bucket_kms_key   = "projects/KMS_PROJECT_ID/locations/REGION/keyRings/KEYRING_NAME/cryptoKeys/KEY_NAME"
logging_bucket   = "BUCKET_LOGGIN_NAME"
kms_project_id   ="KMS_PROJECT_ID"

// 2-multitenant inputs
apps = {
  "default-example" : {
    "acronym"        = "de",
    ip_address_names = [],
    certificates     = {}
  }
}

envs = {
  "development" = {
    "billing_account"    = "000000-000000-000000"
    "folder_id"          = "folders/FOLDER_ID"
    "network_project_id" = "DEV_NETWORK_PROJECT_ID"
    "network_self_link"  = "https://www.googleapis.com/compute/v1/projects/DEV_NETWORK_PROJECT_ID/global/networks/vpc-eab-vpc-development"
    "org_id"             = "000000000000"
    "subnets_self_links" = [
      "https://www.googleapis.com/compute/v1/projects/DEV_NETWORK_PROJECT_ID/regions/REGION/subnetworks/eab-development-REGION",
      "https://www.googleapis.com/compute/v1/projects/DEV_NETWORK_PROJECT_ID/regions/REGION2/subnetworks/eab-development-REGION2",
    ]
  }
  "nonproduction" = {
    "billing_account"    = "000000-000000-000000"
    "folder_id"          = "folders/FOLDER_ID"
    "network_project_id" = "NONPROD_NETWORK_PROJECT_ID"
    "network_self_link"  = "https://www.googleapis.com/compute/v1/projects/NONPROD_NETWORK_PROJECT_ID/global/networks/vpc-eab-vpc-nonproduction"
    "org_id"             = "000000000000"
    "subnets_self_links" = [
      "https://www.googleapis.com/compute/v1/projects/NONPROD_NETWORK_PROJECT_ID/regions/REGION/subnetworks/eab-nonproduction-REGION",
      "https://www.googleapis.com/compute/v1/projects/NONPROD_NETWORK_PROJECT_ID/regions/REGION2/subnetworks/eab-nonproduction-REGION2",
    ]
  }
  "production" = {
    "billing_account"    = "000000-000000-000000"
    "folder_id"          = "folders/FOLDER_ID"
    "network_project_id" = "PROD_NETWORK_PROJECT_ID"
    "network_self_link"  = "https://www.googleapis.com/compute/v1/projects/PROD_NETWORK_PROJECT_ID/global/networks/vpc-eab-vpc-production"
    "org_id"             = "000000000000"
    "subnets_self_links" = [
      "https://www.googleapis.com/compute/v1/projects/PROD_NETWORK_PROJECT_ID/regions/REGION/subnetworks/eab-production-REGION",
      "https://www.googleapis.com/compute/v1/projects/PROD_NETWORK_PROJECT_ID/regions/REGION2/subnetworks/eab-production-REGION2",
    ]
  }
}

// 3-fleetscope inputs

namespace_ids = {
  "hw-example" = "hw-example@DOMAIN.com"
}

remote_state_bucket         = "REMOTE_STATE_BUCKET"
attestation_evaluation_mode = "ALWAYS_ALLOW"
attestation_kms_key         = "projects/ATTESTATION_PROJECT_ID/locations/REGION/keyRings/KMS_KEYRING_ATTESTATION_NAME/cryptoKeys/KMS_ATTESTATION_KEY_NAME"
attestation_kms_project     = "ATTESTATION_PROJECT_ID"
enable_kueue                = false
config_sync_branch          = ""
config_sync_repository_url  = ""
config_sync_secret_type     = ""
disable_istio_on_namespaces = []

// 4-appfactory

billing_account = "000000-000000-000000"
org_id          = "000000000000"

infra_project_apis = [
  "iam.googleapis.com",
  "cloudresourcemanager.googleapis.com",
  "serviceusage.googleapis.com",
  "cloudbilling.googleapis.com"
]
service_perimeter_name = "accessPolicies/ACCESS_POLICY_ID/servicePerimeters/PERIMETER_NAME"
service_perimeter_mode = "DRY_RUN"
access_level_name      = "accessPolicies/ACCESS_POLICY_ID/accessLevels/ACCESS_LEVEL_NAME"
applications = {
  "default-example" = {
    "hello-world" = {
      create_infra_project = false
      create_admin_project = true
      admin_project_id     = null
    }
  }
}
cb_private_workerpool_project_id = "SECRET_PROJECT_ID"
location                         = "REGION"

// 5-appinfra

region            = "REGION"
trigger_location  = "REGION"
bucket_prefix     = "bkt"
